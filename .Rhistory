source('~/Documents/Coursera/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
source('~/Documents/Coursera/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getInverse()
a$set(matrix(5:8,2))
a$get()
cacheSolve(a)
cacheSolve(a)
a$getInverse()
b = a$getInverse()
a$get() %*% b
source('~/Documents/Coursera/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
a$set(matrix(5:8,2))
a$getInverse()
cacheSolve(a)
a$getInverse()
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
format(sampleTimes,"%Y")
format(sampleTimes,"%Y") == 2012
sampleTimes[format(sampleTimes,"%Y") == 2012]
d2012 <- sampleTimes[format(sampleTimes,"%Y") == 2012]
weekdays(d2012)=="Monday"
d2012[weekdays(d2012)=="Monday"]
setwd("~/Documents/Coursera/ReproducibleResearch/Project1/RepData_PeerAssessment1")
unzip("./activity.zip")
dfAct <- read.csv("activity.zip",stringsAsFactors=FALSE)
View(dfAct)
install.packages("knitr")
unzip("./activity.zip")
dfAct <- read.csv("activity.csv",stringsAsFactors=FALSE)
View(dfAct)
aggregate(steps~date,dfAct,sum)
dfStepsPerDay <- aggregate(steps~date,dfAct,sum)
hist(dfStepsPerDay, xlab="Total number of steps taken per day")
hist(dfStepsPerDay$steps, xlab="Total number of steps taken per day")
hist(dfStepsPerDay$steps, xlab="Total number of steps taken per day",main="Histogram of Total Steps Taken Per Day")
MeanStepsPerDay <- mean(dfStepsPerDay$steps)
MedianStepPerDay <- median(dfStepsPerDay$steps)
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.action=na.ignore)
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.action="na.ignore"")
)
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.action="na.ignore")
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.action="na.ignore")
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.action="na.omit")
View(dfStepsPerInterval)
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.rm=TRUE)
View(dfStepsPerInterval)
dfStepsPerInterval <- aggregate(steps~interval,dfAct,mean, na.action="na.omit")
View(dfStepsPerInterval)
dfStepsPerInterval$Interval[which.max(dfStepsPerInterval$steps)]
which.max(dfStepsPerInterval$steps)
dfStepsPerInterval$interval[104]
dfStepsPerInterval$interval[which.max(dfStepsPerInterval$steps)]
dfStepsPerInterval$interval[which.max(dfStepsPerInterval$steps)]
sum(is.na(dfAct$steps))
dfStepsPerInterval2 <- aggregate(steps~interval + date,dfAct,mean, na.rm=TRUE)
View(dfStepsPerInterval2)
plot(dfStepsPerInterval, type="l")
plot(dfStepsPerInterval, type="l", main="Time-Series Plot of the Average Steps Per Interval",xlab="5-min Interval",ylab="Average Steps Across All Days")
print("Mean Steps per Day =" MeanStepsPerDay)
print("Mean Steps per Day =", MeanStepsPerDay)
install.packages("zoo")
library("zoo", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
dfAct2<-na.aggregate(object=dfAct,by=dfAct$interval,FUN=mean,na.rm=FALSE,maxgap=inf)
dfAct2<-na.aggregate(object=dfAct,by=dfAct$interval,FUN=mean,na.rm=FALSE)
View(dfAct2)
dfAct2<-na.aggregate(object=dfAct$steps,by=dfAct$interval,FUN=mean,na.rm=FALSE)
dfAct2[288:290]
dfAct2[280:290]
dfAct2[555]
dfAct2[644L651]
dfAct2[644:651]
cat("Difference between Mean Steps Per day before and after removing NA Values")
sum(is.na(dfActwoNA$steps))
dfActwoNA <- dfAct
dfActwoNA$steps<-na.aggregate(object=dfActwoNA$steps,by=dfActwoNA$interval,FUN=mean,na.rm=FALSE)
sum(is.na(dfActwoNA$steps))
dfActwoNA$day <- factor(ifelse(as.POSIXlt(dfActwoNA$date)$wday %% 6 == 0, "Weekend", "Weekday"))
View(dfActwoNA)
dfActwoNA$day[1700]
dfActwoNA$day[17000]
View(dfStepsPerInterval)
dfStepsPerIntervalwday <- aggregate(steps~interval+day,dfActwoNA,mean, na.rm=TRUE)
View(dfStepsPerIntervalwday)
plot(dfStepsPerIntervalwday[day == "Weekday"], type="l", main="Time-Series Plot of the Average Steps Per Interval",xlab="5-min Interval",ylab="Average Steps Across All Days")
plot(dfStepsPerIntervalwday[dfStepsPerIntervalwday$day == "Weekday"], type="l", main="Time-Series Plot of the Average Steps Per Interval",xlab="5-min Interval",ylab="Average Steps Across All Days")
plot(dfStepsPerIntervalwday[which(day == "Weekday")], type="l", main="Time-Series Plot of the Average Steps Per Interval",xlab="5-min Interval",ylab="Average Steps Across All Days")
dfStepsPerIntervalwday[which(dfStepsPerIntervalwday$day == "Weekday")]
dfStepsPerIntervalwday$steps[which(dfStepsPerIntervalwday$day == "Weekday")]
dfStepsPerIntervalwday$steps[which(dfStepsPerIntervalwday$day == "Weekend")]
plot(dfStepsPerIntervalwday$steps[which(dfStepsPerIntervalwday$day == "Weekday")], type="l", main="Time-Series Plot of the Average Steps Per Interval",xlab="5-min Interval",ylab="Average Steps Across All Days")
library("lattice")
dfStepsPerIntervalwday <- aggregate(steps~interval+day,dfActwoNA,mean, na.rm=TRUE)
xyplot(steps ~interval | day, data= dfStepsPerIntervalwday, layout = c(1,2),main="Time-Series Plot of the Average Steps Per Interval",xlab="5-min Interval",ylab="Average Steps Across All Days")
cat("Mean steps per day:",MeanStepsPerDay)
